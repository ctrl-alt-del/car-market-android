apply plugin: 'com.android.application'
android {

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    buildToolsVersion "23.0.1"
    compileSdkVersion 23

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
}

dependencies {
    def supportLibsVer = '23.1.0'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-v4:${supportLibsVer}"
    compile "com.android.support:appcompat-v7:${supportLibsVer}"
    compile "com.android.support:support-v13:${supportLibsVer}"
    compile 'commons-validator:commons-validator:1.4.0'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'org.apache.httpcomponents:httpclient-android:4.3.3'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'joda-time:joda-time:2.3'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
}

//task wrapper(type: Wrapper) {
//    gradleVersion = '1.12'
//}
//
//task copyJarDependencies(type: Copy) {
//    description = 'Used for Eclipse. Copies all dependencies to the libs directory. If there are any AAR files it will extract the classes.jar and rename it the same as the AAR file but with a .jar on the end.'
//    libDir = new File(project.projectDir, '/libs')
//    println libDir
//    println 'Adding dependencies from compile configuration'
//    configurations.compile.filter {it.name.endsWith 'jar'}.each { File file -> moveJarIntoLibs(file)}
//}

//void moveJarIntoLibs(File file){
//    if (!file.name.contains('android-support-v13')) {
//        copy{
//            from file
//            into 'libs'
//        }
//    }
//}
