buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

repositories { 
    mavenCentral() 
}


apply plugin: 'com.android.application'
android {

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    buildToolsVersion "20.0.0"
    compileSdkVersion 20

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 20
        versionCode 1
        versionName "1.0"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}

dependencies {

    compile files('libs/android-support-v13.jar')
    compile('commons-validator:commons-validator:1.4.0')
    compile('com.squareup:otto:1.3.5')
    compile('com.squareup.picasso:picasso:2.3.3')
    compile('org.apache.httpcomponents:httpclient-android:4.3.3')
    compile('com.google.code.gson:gson:2.2.4')
    compile('joda-time:joda-time:2.3')
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

task copyJarDependencies(type: Copy) {
    description = 'Used for Eclipse. Copies all dependencies to the libs directory. If there are any AAR files it will extract the classes.jar and rename it the same as the AAR file but with a .jar on the end.'
    libDir = new File(project.projectDir, '/libs')
    println libDir
    println 'Adding dependencies from compile configuration'
    configurations.compile.filter {it.name.endsWith 'jar'}.each { File file -> moveJarIntoLibs(file)}
}

void moveJarIntoLibs(File file){
    if (!file.name.contains('android-support-v13')) {
        copy{
            from file
            into 'libs'
        }
    }
}
